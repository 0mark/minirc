#!/bin/bash
#===================
# define daemons
all_daemons="syslog-ng iptables crond dhcpcd sshd privoxy"
default_daemons="$all_daemons"

start_syslog-ng () { /usr/sbin/syslog-ng; }
stop_syslog-ng() { killall syslog-ng; }
start_iptables () {
    IPTABLES_CONF=/etc/iptables/iptables.rules
    /usr/sbin/iptables-restore < $IPTABLES_CONF
}
stop_iptables () {
    for table in $(cat /proc/net/ip_tables_names); do
        iptables-restore < /var/lib/iptables/empty-$table.rules
    done
}
start_crond () { /usr/sbin/crond; }
stop_crond () { killall crond; }
start_dhcpcd () { /etc/rc.d/network start; }
stop_dhcpcd () { /etc/rc.d/network stop; }
start_sshd () { /usr/sbin/sshd; }
stop_sshd () { killall sshd; }
start_privoxy () { /usr/sbin/privoxy --user privoxy.privoxy /etc/privoxy/config; }
stop_privoxy () { killall privoxy; }

test_iptables () { test $(iptables -L | wc -l) -gt 10; }

#===================
# utility functions
echo_color () {
  color=$1
  shift
  echo -e "[1;3${color}m$@[0m"; }
test_ANY () {
    if type test_"$1" 2> /dev/null | grep -q function; then
        test_"$1";
    else
        pgrep "$1"
    fi
}

#===================
# start up the system
if [ "$1" == init ]; then
    #===================
    # mount the API filesystem
    # /proc, /sys, /run, /dev, /run/lock, /dev/pts, /dev/shm
    echo_color 3 mounting API filesystem...
    mountpoint -q /proc    || mount -t proc proc /proc -o nosuid,noexec,nodev
    mountpoint -q /sys     || mount -t sysfs sys /sys -o nosuid,noexec,nodev
    mountpoint -q /run     || mount -t tmpfs run /run -o mode=0755,nosuid,nodev
    mountpoint -q /dev     || mount -t devtmpfs dev /dev -o mode=0755,nosuid
    mkdir -p /dev/{pts,shm}
    mountpoint -q /dev/pts || mount -t devpts devpts /dev/pts -o mode=0620,gid=5,nosuid,noexec
    mountpoint -q /dev/shm || mount -t tmpfs shm /dev/shm -o mode=1777,nosuid,nodev

    #===================
    # initialize system
    echo_color 3 setting up loopback device...
    /usr/sbin/ip link set up dev lo

    echo_color 3 initializing udev...
    #busybox mdev -s
    /usr/bin/udevd --daemon
    /usr/bin/udevadm trigger --action=add --type=subsystems
    /usr/bin/udevadm trigger --action=add --type=devices

    echo_color 3 setting hostname...
    cat /etc/hostname >| /proc/sys/kernel/hostname

    echo_color 3 mounting...
    mount -a
    mount -o remount,rw /

    #===================
    # load rc.local
    echo_color 3 loading /etc/rc.local...
    source /etc/rc.local
    
    #===================
    # start the default daemons
    echo_color 3 starting daemons...
    for dmn in $default_daemons; do
        echo_color 2 starting "$dmn"...
        start_"$dmn"
    done
elif [ "$1" == start ]; then
    #===================
    # start individual daemons
    shift
    for dmn in "$@"; do
        echo_color 2 starting "$dmn"...
        start_"$dmn";
    done
elif [ "$1" == stop ]; then
    #===================
    # stop individual daemons
    shift
    for dmn in "$@"; do
        echo_color 1 stopping "$dmn"...
        stop_"$dmn";
    done
else
    #===================
    # list all daemons and their status
    for dmn in $all_daemons; do
        if test_ANY "$dmn" >& /dev/null; then
            echo_color 2 [X] $dmn
        else
            echo_color 0 [ ] $dmn
        fi
    done
fi
