#!/bin/bash
#===================
# define daemons
ALL_DAEMONS="syslog-ng iptables crond dhcpcd sshd privoxy acpid mpd"
DEFAULT_DAEMONS="$ALL_DAEMONS"

on_boot() {
    #===================
    # mount the API filesystem
    # /proc, /sys, /run, /dev, /run/lock, /dev/pts, /dev/shm
    echo_color 3 mounting API filesystem...
    mountpoint -q /proc    || mount -t proc proc /proc -o nosuid,noexec,nodev
    mountpoint -q /sys     || mount -t sysfs sys /sys -o nosuid,noexec,nodev
    mountpoint -q /run     || mount -t tmpfs run /run -o mode=0755,nosuid,nodev
    mountpoint -q /dev     || mount -t devtmpfs dev /dev -o mode=0755,nosuid
    mkdir -p /dev/{pts,shm}
    mountpoint -q /dev/pts || mount -t devpts devpts /dev/pts -o mode=0620,gid=5,nosuid,noexec
    mountpoint -q /dev/shm || mount -t tmpfs shm /dev/shm -o mode=1777,nosuid,nodev

    #===================
    # initialize system
    echo_color 3 setting up loopback device...
    /usr/sbin/ip link set up dev lo

    echo_color 3 initializing udev...
    #busybox mdev -s
    /usr/bin/udevd --daemon
    /usr/bin/udevadm trigger --action=add --type=subsystems
    /usr/bin/udevadm trigger --action=add --type=devices

    echo_color 3 setting hostname...
    cat /etc/hostname >| /proc/sys/kernel/hostname

    echo_color 3 mounting...
    mount -a
    mount -o remount,rw /

    #===================
    # load rc.local
    echo_color 3 loading /etc/rc.local...
    source /etc/rc.local
    
    #===================
    # start the default daemons
    echo_color 3 starting daemons...
    for dmn in $DEFAULT_DAEMONS; do
        start_process "$dmn"
    done
}

start_process() {
    echo_color 2 starting "$1"...
    case "$1" in
    iptables)
        /usr/sbin/iptables-restore < /etc/iptables/iptables.rules;;
    sshd)
        /usr/sbin/sshd;;  # requires an absolute path
    privoxy)
        /usr/sbin/privoxy --user privoxy.privoxy /etc/privoxy/config;;
    dhcpcd)
        /usr/sbin/dhcpcd -qb eth0;;
    *)
        # fallback: start the command
        "$1";;
    esac
}

stop_process() {
    echo_color 1 stopping "$1"...
    case "$1" in
    iptables)
        for table in $(cat /proc/net/ip_tables_names); do
            iptables-restore < /var/lib/iptables/empty-$table.rules
        done
        ;;
    *)
        # fallback: kill all processes with the name of the command
        killall "$1";;
    esac
}

poll_process() {
    case "$1" in
    iptables)
        # really crude
        test $(iptables -L | wc -l) -gt 10;;
    *)
        # fallback: check if any processes of that name are running
        pgrep "$1" >& /dev/null;;
    esac
}

echo_color() {
  color=$1
  shift
  echo -e "[1;3${color}m$@[0m"
}


#===================
# handle arguments
if [ "$1" == init ]; then
    on_boot
elif [ "$1" == start ]; then
    shift
    for dmn in "$@"; do
        start_process "$dmn";
    done
elif [ "$1" == stop ]; then
    shift
    for dmn in "$@"; do
        stop_process "$dmn";
    done
elif [ -z "$1" ]; then
    # list all daemons and their status
    for dmn in $ALL_DAEMONS; do
        if poll_process "$dmn" >& /dev/null; then
            echo_color 2 [X] $dmn
        else
            echo_color 0 [ ] $dmn
        fi
    done
elif [ "$1" == --version ]; then
    echo minit 0.1
    exit
else
    echo 'usage: rc {init|start|stop} [list of daemons]'
    echo
    echo 'rc (without arguments) lists all daemons and their status'
    echo 'rc init is supposed to be used in the inittab on boot'
    echo 'rc start daemon1 daemon2... starts up daemons'
    echo 'rc stop daemon1 daemon2... stops up daemons'
fi
