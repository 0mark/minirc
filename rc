#!/bin/sh
# This file is executed on boot to initialize the system and can also be run by
# the user to start/stop daemons.

# Fallback Configuration Values, to be able to run even with a broken, deleted
# or outdated minirc.conf:
SYSTEM="mount-api @loopback @hostname mount-fstab mount-root-rw modules minirc.conf"
DAEMONS="systemd-udevd syslog-ng iptables alsa crond dbus wpa_supplicant dhcpcd sshd privoxy polipo acpid mpd vsftpd lighttpd ntpd"
ENABLED="$SYSTEM systemd-udevd @syslog-ng @crond @dhcpcd @sshd"
NETWORK_INTERFACE="eth0"
WIFI_INTERFACE="wlan0"

# User-definable start/stop/restart/poll functions which fall back to defaults
custom_restart() { default_restart "$@"; }
custom_start()   { default_start   "$@"; }
custom_stop()    { default_stop    "$@"; }
custom_poll()    { default_poll    "$@"; }

source /etc/minirc.conf

default_start() {
    echo_color 2 starting "$1"...
    case "$1" in
    all)
        for dmn in $DAEMONS $ENABLED; do
            custom_poll "${dmn##@}" || custom_start "${dmn##@}"
        done;;
    systemd-udevd)
        /usr/lib/systemd/systemd-udevd --daemon
        udevadm trigger --action=add --type=subsystems
        udevadm trigger --action=add --type=devices;;
    mdev)
        busybox mdev -s
        echo /sbin/mdev > /proc/sys/kernel/hotplug;;
    alsa)
        alsactl restore;;
    bitlbee)
        su -s /bin/sh -c 'bitlbee -F' bitlbee;;
    dbus)
        dbus-launch;;
    iptables)
        iptables-restore < /etc/iptables/iptables.rules;;
    sshd)
        /usr/bin/sshd;;  # requires an absolute path
    privoxy)
        privoxy --user privoxy.privoxy /etc/privoxy/config;;
    polipo)
        su -c 'polipo daemonise=true logFile="/var/log/polipo.log"' -s /bin/sh - nobody;;
    dhcpcd)
        if ip link | grep -Fq $NETWORK_INTERFACE; then :; else
            echo_color 3 "waiting for $NETWORK_INTERFACE to settle..."
            for i in $(seq 100); do
                ip link | grep -Fq $NETWORK_INTERFACE && break
                sleep 0.1
            done
        fi
        dhcpcd -nqb;;
    vsftpd)
        vsftpd &;;
    lighttpd)
        lighttpd -f /etc/lighttpd/lighttpd.conf;;
    ntpd)
        ntpd -g -u ntp;;
    wpa_supplicant)
        wpa_supplicant -Dwext -B -i"$WIFI_INTERFACE" -c/etc/wpa_supplicant.conf;;
    icecast)
        icecast -b -c /etc/icecast.xml;;

    # =========================
    # These entries are mainly for booting up the system:
    mount-api)
        mountpoint -q /proc    || mount -t proc proc /proc -o nosuid,noexec,nodev
        mountpoint -q /sys     || mount -t sysfs sys /sys -o nosuid,noexec,nodev
        mountpoint -q /run     || mount -t tmpfs run /run -o mode=0755,nosuid,nodev
        mountpoint -q /dev     || mount -t devtmpfs dev /dev -o mode=0755,nosuid
        mkdir -p /dev/{pts,shm}
        mountpoint -q /dev/pts || mount -t devpts devpts /dev/pts -o mode=0620,gid=5,nosuid,noexec
        mountpoint -q /dev/shm || mount -t tmpfs shm /dev/shm -o mode=1777,nosuid,nodev
        ;;
    loopback)
        /usr/sbin/ip link set up dev lo;;
    hostname)
        cat /etc/hostname >| /proc/sys/kernel/hostname;;
    mount-fstab)
        mount -a;;
    mount-root-rw)
        mount -o remount,rw /;;
    modules)
        for module in $MODULES; do
            modprobe -- $module;
        done;;
    minirc.local)
        if [ -x /etc/minirc.local ]; then
            /etc/minirc.local
        fi;;
    *)
        # fallback: start the command
        "$1";;
    esac
}

default_stop() {
    echo_color 1 stopping "$1"...
    case "$1" in
    all)
        for dmn in $DAEMONS $ENABLED; do
            custom_poll "${dmn##@}" && custom_stop "${dmn##@}"
        done;;
    alsa)
        alsactl store;;
    dbus)
        killall dbus-launch
        killall dbus-daemon;;
    iptables)
        for table in $(cat /proc/net/ip_tables_names); do
            iptables-restore < /var/lib/iptables/empty-$table.rules
        done;;
    minirc.local)
        if [ -x /etc/minirc.local.shutdown ]; then
            echo_color 3 running /etc/minirc.local.shutdown...
            /etc/minirc.local.shutdown
        fi;;
    *)
        # fallback: kill all processes with the name of the command
        killall "$1";;
    esac
}

default_restart() { custom_stop "$@"; custom_start "$@"; }

default_poll() {
    case "$1" in
    alsa)
        return 0;;  # doesn't make much sense for this service
    iptables)
        iptables -L | grep -m 1 -q '^ACCEPT\|^REJECT';;
    *)
        # fallback: check if any processes of that name are running
        pgrep "$1" >& /dev/null;;
    esac
}

echo_color() {
  color="$1"
  shift
  text="$@"
  printf "\033[1;3${color}m$text\033[00m\n"
}


#===================
# handle arguments
case "$1" in
init)
    echo_color 3 starting daemons...
    for dmn in $ENABLED; do
        if [[ "${dmn:0:1}" == '@' ]]; then
            custom_start "${dmn:1}" &
        else
            custom_start "$dmn"
        fi
    done;;
shutdown)
    echo_color 3 stopping daemons...
    custom_stop all
    umount -r /run;;
start|stop|restart)
    cmd="$1"
    shift
    for dmn in ${@:-$DAEMONS}; do
        custom_${cmd} "$dmn"
    done;;
''|list)
    # list all daemons and their status
    for dmn in $DAEMONS; do
        if custom_poll "$dmn" >& /dev/null; then
            echo_color 2 [X] $dmn
        else
            echo_color 0 [ ] $dmn
        fi
    done;;
--version)
    echo minirc 0.2;;
*)
    self=$(basename "$0")
    echo "Usage: $self [--help] [--version] <action> [list of daemons]"
    echo
    echo "Actions:"
    echo "   $self list     shows status of all daemons (default action)"
    echo "   $self init     initialize the system (use in /etc/inittab only!)"
    echo "   $self start    starts daemons"
    echo "   $self stop     stops daemons"
    echo "   $self restart  restarts daemons";;
esac
