#!/bin/sh
#===================
# define daemons
ALL_DAEMONS="syslog-ng iptables crond dbus dhcpcd sshd alsa privoxy acpid mpd vsftpd lighttpd ntpd"
DEFAULT_DAEMONS="$ALL_DAEMONS"

# Choose the udev implementation
#UDEV="systemd"
UDEV="busybox"

# The device of the wired network
NETWORK_INTERFACE=eth0

# The device of the wireless network
WIFI_INTERFACE=wlan0

SCRIPT_PREFIX=/etc/minirc.d/

# /etc/minirc.conf gives you a chance to override the daemon variables
test -f /etc/minirc.conf && source /etc/minirc.conf

self="$(basename $0)"
usage() {
    echo "Usage: $self [--help] [--version] <action> [list of daemons]"
    echo
    echo "Actions:"
    echo "   $self list     shows status of all daemons (default action)"
    echo "   $self init     initialize the system (use in /etc/inittab only!)"
    echo "   $self start    starts daemons"
    echo "   $self stop     stops daemons"
    echo "   $self restart  restarts daemons"
}

on_boot() {
    #===================
    # mount the API filesystem
    # /proc, /sys, /run, /dev, /run/lock, /dev/pts, /dev/shm
    echo_color 3 mounting API filesystem...
    mountpoint -q /proc    || mount -t proc proc /proc -o nosuid,noexec,nodev
    mountpoint -q /sys     || mount -t sysfs sys /sys -o nosuid,noexec,nodev
    mountpoint -q /run     || mount -t tmpfs run /run -o mode=0755,nosuid,nodev
    mountpoint -q /dev     || mount -t devtmpfs dev /dev -o mode=0755,nosuid
    mkdir -p /dev/{pts,shm}
    mountpoint -q /dev/pts || mount -t devpts devpts /dev/pts -o mode=0620,gid=5,nosuid,noexec
    mountpoint -q /dev/shm || mount -t tmpfs shm /dev/shm -o mode=1777,nosuid,nodev

    #===================
    # initialize system
    echo_color 3 setting up loopback device...
    /usr/sbin/ip link set up dev lo

    echo_color 3 initializing udev...
    if [ "$UDEV" == systemd ]; then
        /usr/bin/udevd --daemon
        /usr/bin/udevadm trigger --action=add --type=subsystems
        /usr/bin/udevadm trigger --action=add --type=devices
    else # use busybox mdev as fallback:
        busybox mdev -s
        echo /sbin/mdev > /proc/sys/kernel/hotplug
    fi

    echo_color 3 setting hostname...
    cat /etc/hostname >| /proc/sys/kernel/hostname

    echo_color 3 mounting...
    mount -a
    mount -o remount,rw /

    #===================
    # load rc.local
    echo_color 3 loading /etc/rc.local...
    test -f /etc/rc.local && source /etc/rc.local
    
    #===================
    # start the default daemons
    echo_color 3 starting daemons...
    for dmn in $DEFAULT_DAEMONS; do
        start_process "$dmn"
    done
}

start_process() {
    script="${SCRIPT_PREFIX}$1"
    if [ -f "script" ]; then
        echo_color 2 starting "$1" from "script"...
        "script" start
    elif
        echo_color 2 starting "$1" using default method...
        "$1"
    fi
}

stop_process() {
    script="${SCRIPT_PREFIX}$1"
    if [ -f "$script" ]; then
        echo_color 2 stopping "$1" from "$script"...
        "$script" stop
    elif
        echo_color 2 stopping "$1" using default method...
        killall "$1"
    fi
}

restart_process() { stop_process "$@"; start_process "$@"; }

poll_process() {
    script="${SCRIPT_PREFIX}$1"
    if [ -f "$script" ]; then
        "$script" poll
    elif
        pgrep "$1" >& /dev/null
    fi
}

echo_color() {
  color=$1
  shift
  echo -e "[1;3${color}m$@[0m"
}


#===================
# handle arguments
case "$1" in
init)
    on_boot;;
start|stop|restart)
    cmd="$1"
    shift
    for dmn in ${@:-$ALL_DAEMONS}; do
        ${cmd}_process "$dmn"
    done;;
''|list)
    # list all daemons and their status
    for dmn in $ALL_DAEMONS; do
        if poll_process "$dmn" >& /dev/null; then
            echo_color 2 [X] $dmn
        else
            echo_color 0 [ ] $dmn
        fi
    done;;
--version)
    echo minirc 0.1;;
*)
    usage;;
esac
